Dear Prof. Mehmet,

We are sending as an attachment the new version of our paper. We believe this version considers the reviewers' comments. However, if anything is missing, or you think it could be better explained, please let us know.

The paper now has 13 pages. Is this allowed or should we reduce it to 12 pages? If we have to reduce it
to 12 pages, we were thinking about removing the following parts of the paper: 

a) the last paragraph of the Motivating Example Section, which starts with "In conclusion, both PLUSS and PLUC do not present..."

b) the last paragraph of the left column on page 4, which starts with "Although we are not proposing a new notation for feature modeling, ..."

c) The definition of the feature model data type, at the beginning of the right column of page 4.

d) some sentences in Section 4 (Modeling Framework)


Bellow we present how we have addressed the main points raised by the reviewers. Typos, grammar, references, and other minor issues raised by the reviewers were already fixed.

Thanks a lot,

Rodrigo and Paulo.

---
> express the limitation of the approach:
>
> "For instance, if there was a way of buying (FIGURE 5) where SM
> could be identified by context, the mandatory scenario would not
> have SM as a parameter."

We agree with the review comment, although modeling *all* sources of scenario variability is not a contribution of  the paper. Besides that, we state, in the 2nd bullet of page 2, that: "Although the sources of variability presented here are not complete, we believe that our modeling framework is able to represent other interesting ones, such as context-aware adaptability."

---
> improve usage of references from the perspective requirements engineer:
>
> "The paper should note that the word scenarios has different meanings, using it
> as a detailed information for use cases, is just one of these meanings."

In the last paragraph of the Introduction Section (page 2), we make clear that: "In the remainder of this paper, we use the word scenario as a synonym for the textual specifications of use cases."

---
>
> give less emphasis to the automation part, stressing the role of the
> MK framework for describing the several artifacts (scenario,
> advice, product configuration, configuration knowledge).

and

> The most important issue of the paper is section 3
> (management of variability). They should extend this
> section giving more details of their approach.

Section 3 was extended in the new version. It presents more details about:

* the input languages (pages 4, 5, 6, and 7)
* the semantics of the weaving process (right column of page 6)
* the results of the weaving process for the running example (page 7)
* the tools used for specifying the input languages

For instance, we introduce some remarks related to the SPL use case model (last paragraph of Section 3.2), stating that "since different advices can make references to a same join point, interferences between advices may occur."  Additionally, we explain that *since* "... the weaving process evaluates each advice in a sequence defined by the configuration knowledge... interferences between advices are deterministic and do not require specific constructs in the use case model to deal with them." We complement this discussion showing an operational description about the weaving process evaluation (right column of page 6). Similarly, we present in Section 3.1 (Feature Model) a discussion about how we verify that a product configuration complies to the feature model constraints. 

Additionally, the new version of the paper presents a short discussion about the tools used for instantiating the input languages. For example, we explain in the 4th page that "Additional functions were defined for importing feature models, generated by the Feature Modeling Plugin (FMP) [5], to our environment." and that "Regarding tool support, instances of the use case model can be written in any text editor that is able to export documents using a specific XML format. Additional functions were developed for parsing these documents to the abstract data type of our use case model."

---
>
> last but more important: make it clear and upfront
> the novelty (separation of scenario/advice/configuration) > of the proposal.
>

In the Introduction, we report that, differently from existing works, our approach supports a clear separation of the different
languages involved in scenario variability management. Moreover, the contributions of these languages to the composition process are documented using a well known notion of crosscutting mechanisms (provided by our customization of the Masuhara and Kiczales framework). 

---
>
> Evaluation should be extended (I'm pretty sure
> authors have all the information and they were not able to write
> everything in 12 pages) with the data collected for the case studies.
> If space is needed, comparison with DSM may be dropped.

and

> The paper is not enough information about the framework
> for the reader to replicate the experiment.

and

> Improve the final evaluation, by providing a final synthesis of what
> those metrics and comparisons did show for their work.
> Why should someone would like to use a framework that
> produces/handles SO MANY artifacts?

We extended the evaluation section by presenting examples of the feature assignment process and a discussion about the effect of homogeneous x heterogeneous in our evaluation process (pages 10 and 11). We also introduced a discussion section (page 12), emphasizing that 

"... the expected benefit of our approach is to reduce the impact of evolving an SPL. The metric suite presented here tries to quantify such an impact, since (a) if a scenario has a lower DoF, introducing a new alternative to its variant behavior requires more changes in the base specification; and (b) evolving features with high DoS requires changes in different scenarios. Although the significance level varies from one case study to another, in most of the cases we could improve both scenario cohesion and feature scattering. Therefore, the modularity supported by our approach reduces the number of changes in the base scenarios of an SPL; in such a way that it can evolve by means of the introduction of new scenarios and/or advices."

Regarding the question "Why should someone would like to use a framework that produces/handles SO MANY artifacts?", we state that "independently of the approach, SPL development requires some kind of mapping between the domain and the solution spaces [13, 22]. As a consequence, in this paper we did not introduce new kinds of concerns to the SPL development. Actually, our approach mainly presents a better separation for mapping those SPL concerns."

Also related to the evaluation, we are making available the data collected for the case studies in our web site. Unfortunately, we had
to drop the DSM analysis section. Please, if more details are necessary, let us know. 

---
> A clear comparison with other annotated techniques is also mandatory for me.

We have compared our approach to the PLUC technique in a previous work. As a result, we concluded that PLUC is not maintainable at all. This issue is discussed in several places of the new version of the paper. For instance, in the second paragraph of the Evaluation Section (page 9), we explain that *in the paper* "... we focused our comparisons with the PLUSS approach, mainly because in a previous work we have identified that PLUC specifications are not maintainable at all [9]. Even the introduction of a new member in the SPL require changes in many PLUC scenarios."

Besides that, we believe that it is important to keep the description about PLUC in the Motivating Example Section, since our approach solve PLUC and PLUSS limitations.

---
> Tool: tell us what it does (URL given does not point to it), what can be automated and what cannot.

and

> Tool support seems to be preliminary;

In the Introduction section we stated that "the reference implementation provided for each variability mechanism corresponds to
the essential parts of a tool environment for scenario variability management. In this paper we focus just in these essentials."
Additionally, in Section 3 we make clear that we use existing tools for specifying feature models, product configurations, ... We have
just developed parsers in Haskell to import models specified in these tools to our environment. The weaving process is currently fully
automated by several Haskell functions. 

---
> It is understandable to use annotations for addressing the problem of
> fragilepointcuts. But then, how is it different compared to other
> "annotated techniques" as introduced in section 2?

In the third Section we explained that, differently from PLUSS and PLUC, "our annotations just reveal variation points, which means that annotated steps are obliviousness about which features extend the corresponding behavior.". Therefore, our annotations are not directly related to specific features.




