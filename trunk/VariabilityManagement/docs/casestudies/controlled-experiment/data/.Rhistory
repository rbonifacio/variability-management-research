x <- array(89.7)
x
x <- array(89.7, 81.4, 84.5, 84.8, 87.3, 79.7, 85.1, 81.7, 83.7, 84.5)
x <- array[89.7, 81.4, 84.5, 84.8, 87.3, 79.7, 85.1, 81.7, 83.7, 84.5]
x <- array [1]
y <- array[89.7, 81.4, 84.5, 84.8, 87.3, 79.7, 85.1, 81.7, 83.7, 84.5]
y <- array(89.7, 81.4, 84.5, 84.8, 87.3, 79.7, 85.1, 81.7, 83.7, 84.5)
y <- array(89.7, 81.4)
y <- array(89.7, 81.4, 84.5)
y <- array(89.7, 81.4, 84.5, 84.8)
y <- array(89.7, 81.4, 84.5
y <- array(89.7, 81.4, 84.5)
y
y
?
q
y <- c(89.7, 81.4, 84.5, 84.8, 87.3, 79.7, 85.1, 81.7, 83.7, 84.5)
y
cls
clear
rm(list=ls(all=TRUE))
y <- c(89.7, 81.4, 84.5, 84.8, 87.3, 79.7, 85.1, 81.7, 83.7, 84.5)
y
mean(y)
deviance(y)
plot(x)
plot(yx)
plot(y)
plot(mean(y))
plot(sigma(y))
sigma <- function(v) {
 sum <- 0
for (i in 1:length(v)) {
  sum <- sum + sqr ( (v[i] - mean(v)) )
}
sum
}
sigma (y)
sqr <- function(x) {
x*x
}
sqr 4
sqr (4)
sigma (y)
sigma (y)
> sigma <- function(v) {
+  sum <- 0
+ for (i in 1:length(v)) {
+   sum <- sum + sqr ( (v[i] - mean(v)) )
+ }
+ sum
> sigma <- function(v) {
sigma <- function(v) {
+  sum <- 0
for (i in 1:length(v)) {
  sum <- sum + sqr ( (v[i] - mean(v)) )
}
sum / length(v)
}
sigma (y)
sigma <- function(v) {
 sum <- 0
 for (i in 1:length(v)) {
  sum <- sum + sqr ( (v[i] - mean(v)) )
 }
 sum / (length (v))
}
sigma (y)
sqrt
sqrt (sigma (y))
sqr <- function (x) {
  x*x
}
sigma2 <- function(v) {
 sum <- 0
 for (i in 1:length(v)) {
  sum <- sum + sqr ( (v[i] - mean(v)) )
 }
 sum / (length (v))
}
sigma <- function (v) {
 sqrt (sigma2 (v))
}
sigma (y)
sqr <- function (x) {
  x*x
}
sigma2 <- function(v) {
 sum <- 0
 for (i in 1:length(v)) {
  sum <- sum + sqr ( (v[i] - mean(v)) )
 }
 sum / (length (v))
}
sigma <- function (v) {
 sqrt (sigma2 (v))
}
z <- c(16.8, 13.3, 11.8, 15.0, 13.2)
mean (z)
sigma (z)
sqr <- function (x) {
  x*x
}
sigma2 <- function(v) {
 sum <- 0
 for (i in 1:length(v)) {
  sum <- sum + sqr ( (v[i] - mean(v)) )
 }
 sum / (length (v) -1)
}
sigma <- function (v) {
 sqrt (sigma2 (v))
}
sigma (z)
k <- c (24, 37, 38, 43, 33, 35, 48, 29, 30 , 38)
sigma (k)
mean (k)
sigma2 (k)
columnMean <- function(inputData, column) {
mean(inputData[column])
}
rowMean <- function(inputData, row) {
columns = length(inputData) - 1
        total <- 0
for( i in 2:(columns+1)) {
total <- total + sum(inputData[row, i])
}
total / columns
}
squareMean <- function(inputData) {
columns = length(inputData) - 1
rows <- length(inputData[,1])
total <- 0
for( i in 2:(columns+1)) {
total <- total + sum(inputData[i])
}
total / (rows*columns)
}
columnEffect <- function(inputData, column) {
sm <- squareMean(inputdata)
cm <- columnMean(inputData, column)
cm - sm
}
rowEffect <- function(inputData, row) {
sm <- squareMean(inputdata)
rm <- rowMean(inputData, row)
cm - rm
}
data <- read.table("fase01.data", header=TRUE)
data
columnMean(data, 2)
columnMean(data, 3)
dataAlunoSPL <- read.table("fase01.data", header=TRUE)
dataAlunoTecnica <- read.table("fase01-b.data", header=TRUE)
dataAlunoTecnica
columnMean(dataAlunoSPL, 3)
columnMean(dataAlunoSPL, 2)
columnMean(dataAlunoTecnica, 2)
columnMean(dataAlunoTecnica, 3)
squareMean(dataAlunoTecnica)
squareMean(dataAlunoSPL)
columnEffect(dataAlunoTecnica, 2)
columnEffect <- function(inputData, column) {
sm <- squareMean(inputData)
cm <- columnMean(inputData, column)
cm - sm
}
columnEffect(dataAlunoTecnica, 2)
columnEffect(dataAlunoTecnica, 3)
columns = length(inputData) - 1
lengt(inputData)
lengt(dataAlunoTecnica)
length(dataAlunoTecnica)
help("lm")
