-----------------------------------------------------------------------------
-- |
-- Module      :  UseCaseModel.PrettyPrinter.Latex
-- Copyright   :  (c) Rodrigo Bonifacio 2008, 2009
-- License     :  LGPL
--
-- Maintainer  :  rba2@cin.ufpe.br
-- Stability   :  provisional
-- Portability :  portable
--
-- A Latex pretty printer for our Use Case Model data type. Useful for 
-- generating ps or pdf files from a use case model.
--
--
-----------------------------------------------------------------------------

module UseCaseModel.PrettyPrinter.Latex (ucmToLatex)
where 

import Text.PrettyPrint.HughesPJ

import UseCaseModel.Types
 
ucmToLatex :: UseCaseModel -> Doc
ucmToLatex (UCM name ucs as) = vcat [ beginDocument name
                                    , ucsToLatex ucs
                                    , endDocument
                                    ]

beginDocument :: String -> Doc
beginDocument name =
 vcat [ text "%This Latex file is machine-generated by the Hephaestus\n"
      , text "\\documentclass[a4paper,11pt]{article}" 
      , text "\\newcommand{\\bl}{\\\\ \\hline}"
      , text ("\\title{Use Case Model Generated from " ++ name ++ "}")
      , text "\\begin{document}" 
      , text "\\maketitle"
      ]


ucsToLatex :: [UseCase] -> Doc 
ucsToLatex [] = empty
ucsToLatex (x:xs) = vcat ((text "\\section{Use cases}") : (map ucToLatex (x:xs)))
 where 
   ucToLatex  uc = vcat ([ text ("\\subsection{Use case " ++ (ucId uc) ++ "}") 
                         , text ("\\begin{itemize}") 
                         , text ("\\item {\\bf Name: }" ++ (ucName uc) )
                         , text ("\\item {\\bf Description: }" ++ (ucDescription uc))
                         , text ("\\end{itemize}" )  
                         ] ++ (map scenarioToLatex (ucScenarios uc)))

scenarioToLatex :: Scenario -> Doc
scenarioToLatex (Scenario i d f s t) = vcat ([ text ("\\subsubsection{Scenario " ++ i ++ "}")
                                             , text ("\\begin{itemize}")
                                             , text ("\\item {\\bf Description:} " ++ d)
                                             , text ("\\item {\\bf From steps:} " ++ (show f))
                                             , text ("\\item {\\bf To steps:} " ++ (show t))
                                             , text ("\\end{itemize}")
                                             ] ++ [(flowToLatex s)])

flowToLatex :: Flow -> Doc
flowToLatex [] = empty
flowToLatex (s:ss) = vcat [ text ("\\begin{tabular}{|p{0.4in}|p{1.5in}|p{1.5in}|p{1.5in}|}")
                          , text ("\\hline")
                          , text ("Id & User Action & Condition & System Response \\bl ")
                          , vcat (map stepToLatex (s:ss))       
                          , text ("\\end{tabular}" ) 
                          ]

stepToLatex :: Step -> Doc
stepToLatex (Step i a s r an) = text (concat [i, " & ", a, " & ", s , " & ", r, "\\bl"])             
   
endDocument :: Doc
endDocument =  text "\\end{document}"